class ThreadSincronizada3 implements Runnable {
    private String nome;
    private boolean estaSuspensa, finalizada;
	
    ThreadSincronizada3(String non){
    	this.nome=non;
    	estaSuspensa=false;
    	finalizada=false;
    	
    	new Thread(this).start();
    }
    
	@Override
	public void run() {
	    System.out.println("Executando "+this.nome+"\n");
        try {  
        	for(int val=0;val<10;val++) {
        		System.out.println(this.nome+" - "+val);
        		Thread.sleep(500);
        		
        		synchronized (this){
        			while(estaSuspensa) {
        				wait();
        				System.out.println(this.nome+" está em espera...");
        			}if(finalizada) {
        				System.out.println(this.nome+" foi encerrada forçadamente.");
        				break;
        			}
        		}
        	}
        }catch(InterruptedException e) {}
        System.out.println(this.nome+" encerrada.");
	}

	void suspend() {  this.estaSuspensa=true; }
	
	synchronized void resume() {  this.estaSuspensa=false; notify(); }
	
	synchronized void stop() {  this.finalizada=true; notify(); }
	
//-----------------------------------------------------------------------------------------------

	public static void main(String[] args) {
		ThreadSincronizada3 ta = new ThreadSincronizada3("Thread A");
		ThreadSincronizada3 tb = new ThreadSincronizada3("Thread B");
		//ThreadSincronizada3 tc = new ThreadSincronizada3("Thread C");
		
		ta.suspend();
		try {  Thread.sleep(500); } catch (InterruptedException e) {}
		
		tb.suspend();
		ta.resume();
		try {  Thread.sleep(200); } catch (InterruptedException e) {}
		tb.resume();
		tb.stop();
	}
}
